function get_ascension_automation_settings(want_bonus)
	local tbl = {
		should_wear_weapons = not ascensionpath("Way of the Surprising Fist"),
		ignore_buffs = {},
		slimeling_feed_items = {
			"snapdragon pistil", "elephant stinger",
			"spooky stick",
			"diamond-studded cane", "leather mask", "flaming crutch", "infernal insoles", "infernal fife",
			"Knob Goblin scimitar", "Knob Goblin pants", "Knob Goblin tongs", "viking helmet",
			"spiked femur", "lihc face", "rusty grave robbing shovel", "bone flute",
			"knob bugle",
			"vorpal blade", "magic whistle", "ninja hot pants",
			"ASCII shirt",
			"crowbarrr", "Jolly Roger charrrm bracelet",
			"magilaser blastercannon", "armgun", "ridiculously huge sword", "ocarina of space",
			"rave whistle",
			"black helmet", "black sword", "black greaves",
			"leotarrrd", "grassy cutlass",
			"batblade",
			"antique helmet", "antique spear", "antique shield", "antique greaves",
			"broken sword",
		},
		slimeling_feed_except_one = {
			{ "leather chaps", },
			{ "wonderwall shield", },
			{ "black shield", },
			{ "snake shield", },
			{ "oversized pizza cutter", "huge spoon", },
			{ "hors d'oeuvre tray", },
			{ "hot plate", "coffin lid", },
			{ "tap shoes", },
			{ "worn tophat", "wolf mask", "cornuthaum", },
			{ "dead guy's watch", },
			{ "disturbing fanfic", },
			{ "4-dimensional guitar", },
			{ "mesh cap", },
		},
		use_items = {
			"astral hot dog dinner", "astral six-pack", "carton of astral energy drinks",
			"telegram from Lady Spookyraven",
			"pork elf goodies sack",
			"can of Rain-Doh",
			"Knob Goblin lunchbox",
			"chest of the Bonerdagon",
			"small box", "dead mimic",
			"canopic jar",
			"old coin purse", "old leather wallet",
			"Warm Subject gift certificate",
			"black pension check", "black picnic basket",
			"fat wallet",
			"ancient vinyl coin purse",
			"briefcase",
			"shiny stones",
			"CSA discount card",
			"Squat-Thrust Magazine",
			"O'RLY manual",
			"Ye Olde Bawdy Limerick",
			"crate of firebombs",
		},
		use_except_one = {},
		sell_items = {
			"baconstone", "hamethyst", "porquoise",
			"meat stack", "dense meat stack",
			"moxie weed", "giant moxie weed", "magicalness-in-a-can",
			"strongness elixir", "enchanted barbell", "concentrated magicalness pill",
			"bit-o-cactus", "handful of moss", "suntan lotion of moxiousness", "ancient protein powder",
			"Mad Train wine",
			"ironic jogging shorts",
			"spooky shrunken head", 
			"fat stacks of cash",
			"cat appendix", "batgut", "catgut", "bat guano", "bat wing",
			"Imp Ale", "hot katana blade", "demon skin",
			"8-ball",
			"gator skin", "decaying goldfish liver", "sewer nuggets", "bottle of sewage schnapps",
			"ghuol ears", "lihc eye", "smart skull", "ghuol egg", "ghuol guolash",
			"grouchy restless spirit",
			"stone of eXtreme power",
			"cocoa eggshell fragment",
			"cardboard wakizashi",
			"phat turquoise bead", "beach glass bead", "clay peace-sign bead",
			"sunken chest", "pirate pelvis",
			"ballroom blintz", "royal jelly", "unidentified jerky", "mind flayer corpse",
			"procrastination potion", "probability potion",
			"drab sonata",
			"baby killer bee",
			"rocky raccoon", "Tuesday's ruby",
			"tip jar", "barrrnacle", "grumpy old man charrrm", "tarrrnish charrrm", "all-purpose cleaner", "rum barrel charrrm", "cannonball charrrm", "copper ha'penny charrrm", "booty chest charrrm", "silver tongue charrrm",
			"empty Cloaca-Cola bottle", "valuable trinket",
			"flimsy clipboard", "stolen office supplies",
			"awful poetry journal", "furry fur",
			"commemorative war stein",
			"photoprotoneutron torpedo", "chaos butterfly",
			"ketchup hound", "guitar pick", "original G", 
			"leathery bat skin", "leathery cat skin", "leathery rat skin",
			"yeti fur",
		},
		sell_except_one = {
			"bowl of cottage cheese",
			"metallic A", "ruby W", "lowercase N", "heavy D",
			"Feng Shui for Big Dumb Idiots", "decorative fountain", "windchimes",
		},
		default_equipment = {
			hat = {
				{ name = "leather aviator's cap", check = function() return want_bonus.rollover_adventures end },
				{ name = "Hairpiece On Fire", check = function() return want_bonus.rollover_adventures end },
				{ name = "silent beret", check = function() return want_bonus.noncombat end },
				"Crown of Thrones",
				{ name = "spangly sombrero", check = function() return (mainstat_type("Moxie") and level() < 13) end },
				{ name = "Boris's Helm (askew)", check = function() return (level() < 13) end },
				{ name = "Spooky Putty mitre", check = function() return (level() < 13) end },
				"Boris's Helm",
				"Brimstone Beret",
				"astral chapeau",
				"Helm of the Scream Emperor",
				"Hairpiece On Fire",
				{ name = "miner's helmet", check = function() return want_bonus.extraplusitems end },
				"double-ice cap",
				{ name = "filthy knitted dread sack", check = function() return want_bonus.elemental_weapon_damage end },
				"reinforced beaded headband",
				{ name = "beer helmet", check = function() return (not want_bonus.extraplusitems) end },
				"Jarlsberg's hat",
				"fuzzy busby",
				"worn tophat",
				"fuzzy earmuffs",
				"powdered wig",
				"miner's helmet",
				"Van der Graaf helmet",
				"chef's hat",
				"Crown of the Goblin King",
				"cornuthaum",
				"Knob Goblin elite helm",
				"Dolphin King's crown",
				"eyepatch",
				"mariachi hat",
				"helmet turtle",
				"snorkel",
			},
			container = {
				{ name = "Time Bandit Time Towel", check = function() return want_bonus.rollover_adventures end },
				"Buddy Bjorn",
				{ name = "Rain-Doh red wings", check = function() return want_bonus.plusinitiative end },
				{ name = "Camp Scout backpack", check = function() return not want_bonus.easy_combat end },
				{ name = "frozen turtle shell", check = function() return (want_bonus.elemental_weapon_damage and playerclass("Turtle Tamer")) end },
				{ name = "oil shell", check = function() return (want_bonus.elemental_weapon_damage and playerclass("Turtle Tamer")) end },
				"Cloak of Dire Shadows",
				"Misty Cape",
				"Misty Cloak",
				"Misty Robe",
				"Time Bandit Time Towel",
				"Rain-Doh red wings",
				"Camp Scout backpack",
				"barskin cloak",
				{ name = "frozen turtle shell", check = function() return playerclass("Turtle Tamer") end },
				{ name = "oil shell", check = function() return playerclass("Turtle Tamer") end },
				"black cloak",
				"giant gym membership card",
				{ name = "shellacked shell", check = function() return playerclass("Turtle Tamer") end },
				{ name = "pillow shell", check = function() return playerclass("Turtle Tamer") end },
				{ name = "whatsit-covered turtle shell", check = function() return playerclass("Turtle Tamer") end },
				{ name = "shocked shell", check = function() return playerclass("Turtle Tamer") end },
			},
			shirt = {
				{ name = "General Sage's Lonely Diamonds Club Jacket", check = function() return want_bonus.rollover_adventures end },
				{ name = "Sneaky Pete's leather jacket", check = function() return want_bonus.rollover_adventures end },
				"fishbone corset",
				{ name = "flaming pink shirt", check = function() return want_bonus.plusitems end },
				"Sneaky Pete's leather jacket (collar popped)",
				"Sneaky Pete's leather jacket",
				{ name = "cane-mail shirt", check = function() return (level() < 13) end },
				"astral shirt",
				"flaming pink shirt",
				"famous blue raincoat",
				{ name = "midriff scrubs", check = function() return want_bonus.elemental_weapon_damage end },
				{ name = "sugar shirt", check = function() return (level() < 13) end },
				{ name = "hipposkin poncho", check = function() return (level() < 13) end },
				"yak anorak",
				{ name = "goth kid t-shirt", check = function() return (level() < 13) end },
				"Grateful Undead T-shirt",
				"punk rock jacket",
				"souvenir ski t-shirt",
				"harem girl t-shirt",
				"ASCII shirt",
				"Knob Goblin elite shirt",
				"midriff scrubs",
				"surgical apron",
				"eXtreme Bi-Polar Fleece Vest",
			},
			pants = {
				{ name = "stinky cheese diaper", check = function() return want_bonus.rollover_adventures end },
				{ name = "paperclip pants", check = function() return want_bonus.rollover_adventures end },
				{ name = "Vicar's Tutu", check = function() return want_bonus.rollover_adventures end },
				"Pantsgiving",
				{ name = "stinky cheese diaper", check = function() return not want_bonus.easy_combat end },
				"Brimstone Boxers",
				"spangly mariachi pants",
				"astral shorts",
				"astral trousers",
				"Greaves of the Murk Lord",
				"Vicar's Tutu",
				{ name = "buoybottoms", check = function() return (level() < 13) end },
				{ name = "troll britches", check = function() return (level() < 13) end },
				"Greatest American Pants",
				{ name = "Whoompa Fur Pants", check = function() return want_bonus.elemental_weapon_damage end },
				{ name = "giant discarded torn-up glove", check = function() return want_bonus.elemental_weapon_damage end },
				{ name = "filthy corduroys", check = function() return want_bonus.elemental_weapon_damage end },
				"big pants",
				"leather chaps",
				"distressed denim pants",
				"bullet-proof corduroys",
				"black greaves",
				"bloodied surgical dungarees",
				"pygmy briefs",
				"dress pants",
				"snowboarder pants",
				"miner's pants",
				"swashbuckling pants",
				"Boss Bat britches",
				"stylish swimsuit",
				"Knob Goblin elite pants",
				"ninja hot pants",
				"turtle wax greaves",
				"pants of the Slug Lord",
				"frilly skirt",
				"Knob Goblin pants",
				"old sweatpants",
			},
			accessories = {
				{ name = "fudgecycle", check = function() return want_bonus.rollover_adventures end },
				{ name = "Boots of Twilight Whispers", check = function() return want_bonus.rollover_adventures end },
				{ name = "gold wedding ring", check = function() return want_bonus.rollover_adventures end },
				{ name = "dead guy's watch", check = function() return want_bonus.rollover_adventures end },
				{ name = "over-the-shoulder Folder Holder", check = function() return want_bonus.noncombat and script_want_2_day_SCHR() end },
				{ name = "Fuzzy Slippers of Hatred", check = function() return want_bonus.noncombat end },
				{ name = "Space Trip safety headphones", check = function() return want_bonus.noncombat end },
				{ name = "duonoculars", check = function() return want_bonus.noncombat end },
				{ name = "Bram's choker", check = function() return want_bonus.noncombat end },
				{ name = "portable cassette player", check = function() return want_bonus.combat end },
				{ name = "ring of conflict", check = function() return want_bonus.noncombat end },
				{ name = "Juju Mojo Mask", check = function() return (level() < 13 and not want_bonus.extraplusitems) end },
				{ name = "plastic vampire fangs", check = function() return (level() < 6 and not want_bonus.extraplusitems) end },
				{ name = "Jekyllin hide belt", check = function() return want_bonus.plusitems end },
				{ name = "Mr. Accessory Jr.", check = function() return want_bonus.plusitems end },
				{ name = "astral mask", check = function() return want_bonus.plusitems end },
				{ name = "stinky cheese eye", check = function() return want_bonus.plusitems end },
				{ name = "Baron von Ratsworth's monocle", check = function() return want_bonus.plusitems end },
				{ name = "Loathing Legion rollerblades", check = function() return want_bonus.plusinitiative end },
				{ name = "Juju Mojo Mask", check = function() return level() < 13 end },
				{ name = "Brimstone Brooch", check = function() return not ascensionstatus("Aftercore") end },
				{ name = "Brimstone Bracelet", check = function() return not ascensionstatus("Aftercore") end },
				{ name = "plastic vampire fangs", check = function() return (mp() < 60 or level() < 9) end },
				{ name = "hockey stick of furious angry rage", check = function() return not want_bonus.easy_combat and level() < 13 end },
				{ name = "Hand in Glove", check = function() return not want_bonus.easy_combat and level() < 13 end },
				"over-the-shoulder Folder Holder",
				"astral ring",
				"astral mask",
				{ name = "astral belt", check = function() return (level() >= 7 or (challenge == "fist" and fist_level > 0) or not ascensionstatus("Hardcore")) and not want_bonus.easy_combat and level() < 13 end }, -- How early should we wear this?
				{ name = "Loathing Legion necktie", check = function() return level() < 13 end },
				{ name = "C.A.R.N.I.V.O.R.E. button", check = function() return level() < 13 end },
				{ name = "frosty halo", check = function() return want_bonus.plusitems and not equipment().weapon end },
				{ name = "furry halo", check = function() return want_bonus.plusitems and not equipment().weapon end },
				{ name = "shining halo", check = function() return level() < 13 and not equipment().weapon end },
				{ name = "ghost of a necklace", check = function() return want_bonus.elemental_weapon_damage end },
				{ name = "imp unity ring", check = function() return want_bonus.elemental_weapon_damage end },
				{ name = "badge of authority", check = function() return level() < 13 end },
				{ name = "ring of aggravate monster", check = function() return level() < 13 end },
				"Juju Mojo Mask",
				"plastic vampire fangs",
				"Jekyllin hide belt",
				"Mr. Accessory Jr.",
				"stinky cheese eye",
				{ name = "Mr. Accessory", check = function() return not ascensionstatus("Hardcore") end },
				"Gauntlets of the Blood Moon",
				"Boots of Twilight Whispers",
				"Nickel Gamma of Frugality",
				{ name = "furry halo", check = function() return not want_bonus.easy_combat and not equipment().weapon end },
				{ name = "frosty halo", check = function() return not want_bonus.easy_combat and not equipment().weapon end },
				{ name = "observational glasses", check = function() return not want_bonus.easy_combat end },
				"sphygmomanometer",
				"bejeweled pledge pin",
				"pirate fledges",
				{ name = "Bram's choker", check = function() return not want_bonus.combat end },
				"warbear warscarf",
				"Bonerdagon necklace",
				"Codpiece of the Goblin King",
				"baconstone pendant",
				"baconstone ring",
				"badass belt",
				"batskin belt",
				"shiny ring",
				"ghost of a necklace",
				"sk8board",
				"infernal insoles",
				"dirty hobo gloves",
				"vampire collar",
			},
			familiarequip = {
				{ name = "miniature life preserver", check = function() return ascensionpath("Heavy Rains") end },
				{ name = "bag of many confections", check = function() return familiar("Stocking Mimic") end },
				"astral pet sweater",
				{ name = "gnomish housemaid's kgnee", check = function() return familiar("Reagnimated Gnome") end },
				{ name = "fixed-gear bicycle", check = function() return familiar("Mini-Hipster") end },
				{ name = "bugged balaclava", check = function() return familiar("Baby Bugged Bugbear") end },
				{ name = "spangly sombrero", check = function() return familiar("Mad Hatrack") end },
				{ name = "spangly mariachi pants", check = function() return familiar("Fancypants Scarecrow") end },
				{ name = "studded leather boxer shorts", check = function() return familiar("Fancypants Scarecrow") end },
				{ name = "Boss Bat britches", check = function() return familiar("Fancypants Scarecrow") end },
				"ittah bittah hookah",
				{ name = "annoying pitchfork", check = function() return not want_bonus.easy_combat and level() < 13 end },
				"lead necklace",
				"ant hoe",
				"ant pick",
				"ant pitchfork",
				"ant rake",
				"ant sickle",
			}
		}
	}
	if tbl.should_wear_weapons then
		tbl.default_equipment.weapon = {
			"Trusty",
			{ name = "iFlail", check = function() return not want_bonus.combat end },
			{ name = "Staff of Simmering Hatred", check = function() return not want_bonus.not_casting_spells end },
			{ name = "Staff of the Walk-In Freezer", check = function() return not want_bonus.not_casting_spells end },
			{ name = "Staff of the Woodfire", check = function() return not want_bonus.not_casting_spells end },
			{ name = "Staff of Queso Escusado", check = function() return not want_bonus.not_casting_spells end },
			{ name = "Staff of the Kitchen Floor", check = function() return not want_bonus.not_casting_spells end },
			{ name = "Staff of the Black Kettle", check = function() return not want_bonus.not_casting_spells end },
			{ name = "Staff of the Soupbone", check = function() return not want_bonus.not_casting_spells end },
			"Brimstone Bludgeon",
			"ice sickle",
			"Thor's Pliers",
			"lightning rod",
			"haiku katana",
			{ name = "Staff of the Standalone Cheese", check = function() return want_bonus.plusinitiative end },
			{ name = "Staff of the Light Lunch", check = function() return want_bonus.plusinitiative end },
			{ name = "Staff of the All-Steak", check = function() return want_bonus.easy_combat end },
			{ name = "Staff of the Cream of the Cream", check = function() return want_bonus.easy_combat end },
			"Staff of the Staff of Life",
			"Staff of the All-Steak",
			"Staff of the Healthy Breakfast",
			"Staff of Fruit Salad",
			"Shakespeare's Sister's Accordion",
			"right bear arm",
			{ name = "Staff of the Headmaster's Victuals", check = function() return not want_bonus.not_casting_spells end },
			"alarm accordion",
			"peace accordion",
			"Squeezebox of the Ages",
			"Rock and Roll Legend",
			"accordion file",
			"baritone accordion",
			"stolen accordion",
			{ name = "Meat Tenderizer is Murder", check = function() return playerclass("Seal Clubber") end },
			{ name = "Hand that Rocks the Ladle", check = function() return playerclass("Pastamancer") end },
			{ name = "Saucepanic", check = function() return playerclass("Sauceror") end },
			{ name = "Frankly Mr. Shank", check = function() return playerclass("Disco Bandit") end },
			"Sheila Take a Crossbow",
			"Work is a Four Letter Sword",
			"Sneaky Pete's basket",
			"hilarious comedy prop",
			"ironic battle spoon",
			"rubber band gun",
			"seal-clubbing club",
			"turtle totem",
		}
		tbl.default_equipment.offhand = {
			{ name = "iFlail", check = function() return not want_bonus.combat end },
			{ name = "Hand that Rocks the Ladle", check = function() return playerclass("Pastamancer") end },
			{ name = "Saucepanic", check = function() return playerclass("Sauceror") end },
			{ name = "Frankly Mr. Shank", check = function() return playerclass("Disco Bandit") end },
			{ name = "Meat Tenderizer is Murder", check = function() return playerclass("Seal Clubber") end },
			"Sheila Take a Crossbow",
			"Work is a Four Letter Sword",
			"Bag o' Tricks",
			{ name = "A Light that Never Goes Out", check = function() return want_bonus.plusitems end },
			"Jarlsberg's pan",
			"Jarlsberg's pan (Cosmic portal mode)",
			{ name = "Operation Patriot Shield", check = function() return level() < 13 end },
			{ name = "Rain-Doh green lantern", check = function() return want_bonus.easy_combat end },
			"pool skimmer",
			{ name = "Rain-Doh green lantern", check = function() return not want_bonus.not_casting_spells end },
			"Operation Patriot Shield",
			"astral shield",
			"Brimstone Bunker",
			{ name = "Ouija Board, Ouija Board", check = function() return playerclass("Turtle Tamer") end },
			"A Light that Never Goes Out",
			"left bear arm",
			{ name = "hot plate", check = function() return want_bonus.elemental_weapon_damage end },
			{ name = "Victor, the Insult Comic Hellhound Puppet", check = function() return want_bonus.monster_level end },
			"wicker shield",
			"black shield",
			"giant clay ashtray",
			"hot plate",
			"magical ice cubes",
		}
	end
	function tbl.canwear_itemname(x)
		local itemname = nil
		if type(x) == "string" then
			if have_item(x) and can_equip_item(x) then
				itemname = x
			end
		elseif type(x) == "table" then
			if have_item(x.name) and x.check and x.check() and can_equip_item(x.name) then
				if want_bonus.easy_combat and datafile("items")[x.name] and ((datafile("items")[x.name].equip_bonuses or {})["Monster Level"] or 0) > 0 then
				else
					itemname = x.name
				end
			end
		end
		return itemname
	end

	if not ascensionpath("Standard") and tbl.canwear_itemname("powdered wig") then
		table.insert(tbl.sell_items, "Van der Graaf helmet")
	end
	if have_item("pirate fledges") then
		table.insert(tbl.sell_items, "The Big Book of Pirate Insults")
	end
	if count_item("meat paste") >= 10 or (moonsign_area() == "Degrassi Knoll" and challenge ~= "zombie") then
		table.insert(tbl.sell_items, "meat paste")
	end

	for x, y in pairs(datafile_buff_recast_skills) do
		if have_skill(y) == false then
			tbl.ignore_buffs[x] = true
		end
	end

	for _, x in ipairs { "Spirit of Bacon Grease", "Spirit of Garlic", "Spirit of Peppermint", "Spirit of Cayenne", "Spirit of Wormwood" } do
		tbl.ignore_buffs[x] = not have_skill("Flavour of Magic")
	end

	return tbl
end
